import keyword
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
import math as ma
#import the dataset#
# checkinf for null values if any#
iris.isna()
#describing statistical values#
iris.describe()
iris["variety"].value_counts()
iris.plot(kind="scatter",x="SepalLengthCm",y="SepalWidthCm")
sns.heatmap(iris.corr(),annot=True,cmap="spectral")
plt.show()
sns.facetgrid(iris,hue="variety", sizes=5)\
.map(plt.scatter,"sepal.length","sepal.width")\
.add_legend()
sns.facetgrid(iris,hue="variety", sizes=5)\
.map(plt.scatter,"PetalLengthCm","PetalWidthCm")\
.add_legend()
x=iris.iloc[:,[0,1,2,3]].values
from sklearn.cluster import KMEANS
WCSS=[]

for i in range(1, 11):
    kmeans = KMEANS(n_clusters = i, init = 'K-means++',
		    max_iter = 300, n_init = 10,random_state = 0)
    kmeans.fit(x)
    WCSS.append(kmeans.inertia_)
#Plotting the result onto a line graph,
# Allowing us to observe 'The elbow'
plt.plot(range(1, 11), WCSS)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS') #Within cluster sum of square
plt.show

kmeans = KMeans(n_clusters = i, init = 'k-means++',
      		    max_iter = 300, n_init = 10,random_state = 0)
y_kmeans=kmeans.predict(x)

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1],
            s=100, c = 'red', label = "Iris-setosa")
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1],
            s=100, c = 'green', label = "Iris-versicolour")
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
            s=100, c = 'blue', label = "Iris-verginica")
#Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers [:,0], kmeans.cluster_centers_[:,1],
            s=100,c = 'black', label = 'Centroids')
plt.legend()
